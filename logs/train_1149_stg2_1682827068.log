04/29 11:57:48 PM The args: Namespace(aug_train=True, cache_dir='', data_dir='./_data/glue_data/RTE', data_url='', do_eval=False, do_lower_case=True, eval_batch_size=32, eval_step=2000, gradient_accumulation_steps=1, learning_rate=3e-05, max_seq_length=128, no_cuda=False, num_train_epochs=4.0, output_dir='./models_train/TinyBERT_6L_768D_1149_stg2_RTE', pred_distill=True, seed=42, student_model='./models_train/TinyBERT_6L_768D_1149_stg1_RTE', task_name='RTE', teacher_model='./_models/bert-base-uncased-rte', temperature=1.0, train_batch_size=32, warmup_proportion=0.1, weight_decay=0.0001)
04/29 11:57:48 PM device: cuda n_gpu: 1
04/29 11:57:48 PM ******** num_labels=2
04/29 11:58:34 PM Model config {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "rte",
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "pre_trained": "",
  "problem_type": "single_label_classification",
  "training": "",
  "transformers_version": "4.6.1",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

04/29 11:58:35 PM Loading model ./_models/bert-base-uncased-rte/pytorch_model.bin
04/29 11:58:35 PM loading model...
04/29 11:58:35 PM done!
04/29 11:58:35 PM Weights of TinyBertForSequenceClassification not initialized from pretrained model: ['fit_dense.weight', 'fit_dense.bias']
04/29 11:58:35 PM Weights from pretrained model not used in TinyBertForSequenceClassification: ['bert.embeddings.position_ids']
04/29 11:58:35 PM Model config {
  "attention_probs_dropout_prob": 0.1,
  "cell": {},
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 6,
  "pre_trained": "",
  "structure": [],
  "training": "",
  "type_vocab_size": 2,
  "vocab_size": 30522
}

04/29 11:58:36 PM Loading model ./models_train/TinyBERT_6L_768D_1149_stg1_RTE/pytorch_model.bin
04/29 11:58:36 PM loading model...
04/29 11:58:36 PM done!
04/29 11:58:36 PM ***** Running training *****
04/29 11:58:36 PM   Num examples = 144076
04/29 11:58:36 PM   Batch size = 32
04/29 11:58:36 PM   Num steps = 18008
04/29 11:58:36 PM n: bert.embeddings.word_embeddings.weight
04/29 11:58:36 PM n: bert.embeddings.position_embeddings.weight
04/29 11:58:36 PM n: bert.embeddings.token_type_embeddings.weight
04/29 11:58:36 PM n: bert.embeddings.LayerNorm.weight
04/29 11:58:36 PM n: bert.embeddings.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.self.query.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.self.query.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.self.key.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.self.key.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.self.value.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.self.value.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.attention.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.intermediate.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.intermediate.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.0.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.0.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.self.query.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.self.query.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.self.key.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.self.key.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.self.value.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.self.value.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.attention.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.intermediate.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.intermediate.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.1.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.1.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.self.query.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.self.query.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.self.key.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.self.key.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.self.value.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.self.value.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.attention.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.intermediate.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.intermediate.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.2.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.2.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.self.query.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.self.query.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.self.key.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.self.key.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.self.value.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.self.value.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.attention.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.intermediate.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.intermediate.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.3.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.3.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.self.query.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.self.query.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.self.key.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.self.key.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.self.value.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.self.value.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.attention.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.intermediate.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.intermediate.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.4.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.4.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.self.query.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.self.query.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.self.key.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.self.key.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.self.value.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.self.value.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.attention.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.intermediate.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.intermediate.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.output.dense.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.output.dense.bias
04/29 11:58:36 PM n: bert.encoder.layer.5.output.LayerNorm.weight
04/29 11:58:36 PM n: bert.encoder.layer.5.output.LayerNorm.bias
04/29 11:58:36 PM n: bert.pooler.dense.weight
04/29 11:58:36 PM n: bert.pooler.dense.bias
04/29 11:58:36 PM n: classifier.weight
04/29 11:58:36 PM n: classifier.bias
04/29 11:58:36 PM n: fit_dense.weight
04/29 11:58:36 PM n: fit_dense.bias
04/29 11:58:36 PM Total parameters: 67547138
04/30 12:03:33 AM ***** Running evaluation *****
04/30 12:03:33 AM   Epoch = 0 iter 1999 step
04/30 12:03:33 AM   Num examples = 277
04/30 12:03:33 AM   Batch size = 32
04/30 12:03:33 AM preds.shape (277, 2)
04/30 12:03:33 AM ***** Eval results *****
04/30 12:03:33 AM   acc = 0.6173285198555957
04/30 12:03:33 AM   att_loss = 0.0
04/30 12:03:33 AM   cls_loss = 0.25391005710878034
04/30 12:03:33 AM   eval_loss = 0.6698698997497559
04/30 12:03:33 AM   global_step = 1999
04/30 12:03:33 AM   loss = 0.25391005710878034
04/30 12:03:33 AM   rep_loss = 0.0
04/30 12:03:33 AM ***** Save model *****
04/30 12:08:31 AM ***** Running evaluation *****
04/30 12:08:31 AM   Epoch = 0 iter 3999 step
04/30 12:08:31 AM   Num examples = 277
04/30 12:08:31 AM   Batch size = 32
04/30 12:08:31 AM preds.shape (277, 2)
04/30 12:08:31 AM ***** Eval results *****
04/30 12:08:31 AM   acc = 0.6389891696750902
04/30 12:08:31 AM   att_loss = 0.0
04/30 12:08:31 AM   cls_loss = 0.2519871410197632
04/30 12:08:31 AM   eval_loss = 0.6527784599198235
04/30 12:08:31 AM   global_step = 3999
04/30 12:08:31 AM   loss = 0.2519871410197632
04/30 12:08:31 AM   rep_loss = 0.0
04/30 12:08:31 AM ***** Save model *****
04/30 12:13:28 AM ***** Running evaluation *****
04/30 12:13:28 AM   Epoch = 1 iter 5999 step
04/30 12:13:28 AM   Num examples = 277
04/30 12:13:28 AM   Batch size = 32
04/30 12:13:29 AM preds.shape (277, 2)
04/30 12:13:29 AM ***** Eval results *****
04/30 12:13:29 AM   acc = 0.6389891696750902
04/30 12:13:29 AM   att_loss = 0.0
04/30 12:13:29 AM   cls_loss = 0.24981548288263475
04/30 12:13:29 AM   eval_loss = 0.6563595533370972
04/30 12:13:29 AM   global_step = 5999
04/30 12:13:29 AM   loss = 0.24981548288263475
04/30 12:13:29 AM   rep_loss = 0.0
04/30 12:18:26 AM ***** Running evaluation *****
04/30 12:18:26 AM   Epoch = 1 iter 7999 step
04/30 12:18:26 AM   Num examples = 277
04/30 12:18:26 AM   Batch size = 32
04/30 12:18:26 AM preds.shape (277, 2)
04/30 12:18:26 AM ***** Eval results *****
04/30 12:18:26 AM   acc = 0.6606498194945848
04/30 12:18:26 AM   att_loss = 0.0
04/30 12:18:26 AM   cls_loss = 0.24955696904270658
04/30 12:18:26 AM   eval_loss = 0.6498165925343832
04/30 12:18:26 AM   global_step = 7999
04/30 12:18:26 AM   loss = 0.24955696904270658
04/30 12:18:26 AM   rep_loss = 0.0
04/30 12:18:26 AM ***** Save model *****
04/30 12:23:24 AM ***** Running evaluation *****
04/30 12:23:24 AM   Epoch = 2 iter 9999 step
04/30 12:23:24 AM   Num examples = 277
04/30 12:23:24 AM   Batch size = 32
04/30 12:23:24 AM preds.shape (277, 2)
04/30 12:23:24 AM ***** Eval results *****
04/30 12:23:24 AM   acc = 0.6425992779783394
04/30 12:23:24 AM   att_loss = 0.0
04/30 12:23:24 AM   cls_loss = 0.2487941870587555
04/30 12:23:24 AM   eval_loss = 0.6521824796994528
04/30 12:23:24 AM   global_step = 9999
04/30 12:23:24 AM   loss = 0.2487941870587555
04/30 12:23:24 AM   rep_loss = 0.0
04/30 12:28:21 AM ***** Running evaluation *****
04/30 12:28:21 AM   Epoch = 2 iter 11999 step
04/30 12:28:21 AM   Num examples = 277
04/30 12:28:21 AM   Batch size = 32
04/30 12:28:21 AM preds.shape (277, 2)
04/30 12:28:21 AM ***** Eval results *****
04/30 12:28:21 AM   acc = 0.6425992779783394
04/30 12:28:21 AM   att_loss = 0.0
04/30 12:28:21 AM   cls_loss = 0.24860634336089452
04/30 12:28:21 AM   eval_loss = 0.6420606440967984
04/30 12:28:21 AM   global_step = 11999
04/30 12:28:21 AM   loss = 0.24860634336089452
04/30 12:28:21 AM   rep_loss = 0.0
04/30 12:33:18 AM ***** Running evaluation *****
04/30 12:33:18 AM   Epoch = 3 iter 13999 step
04/30 12:33:18 AM   Num examples = 277
04/30 12:33:18 AM   Batch size = 32
04/30 12:33:19 AM preds.shape (277, 2)
04/30 12:33:19 AM ***** Eval results *****
04/30 12:33:19 AM   acc = 0.6750902527075813
04/30 12:33:19 AM   att_loss = 0.0
04/30 12:33:19 AM   cls_loss = 0.24778102846102104
04/30 12:33:19 AM   eval_loss = 0.6297483907805549
04/30 12:33:19 AM   global_step = 13999
04/30 12:33:19 AM   loss = 0.24778102846102104
04/30 12:33:19 AM   rep_loss = 0.0
04/30 12:33:19 AM ***** Save model *****
04/30 12:38:16 AM ***** Running evaluation *****
04/30 12:38:16 AM   Epoch = 3 iter 15999 step
04/30 12:38:16 AM   Num examples = 277
04/30 12:38:16 AM   Batch size = 32
04/30 12:38:16 AM preds.shape (277, 2)
04/30 12:38:16 AM ***** Eval results *****
04/30 12:38:16 AM   acc = 0.6389891696750902
04/30 12:38:16 AM   att_loss = 0.0
04/30 12:38:16 AM   cls_loss = 0.24837814640243322
04/30 12:38:16 AM   eval_loss = 0.6516929732428657
04/30 12:38:16 AM   global_step = 15999
04/30 12:38:16 AM   loss = 0.24837814640243322
04/30 12:38:16 AM   rep_loss = 0.0
04/30 12:43:14 AM ***** Running evaluation *****
04/30 12:43:14 AM   Epoch = 3 iter 17999 step
04/30 12:43:14 AM   Num examples = 277
04/30 12:43:14 AM   Batch size = 32
04/30 12:43:14 AM preds.shape (277, 2)
04/30 12:43:14 AM ***** Eval results *****
04/30 12:43:14 AM   acc = 0.6462093862815884
04/30 12:43:14 AM   att_loss = 0.0
04/30 12:43:14 AM   cls_loss = 0.24838496490918313
04/30 12:43:14 AM   eval_loss = 0.6422170268164741
04/30 12:43:14 AM   global_step = 17999
04/30 12:43:14 AM   loss = 0.24838496490918313
04/30 12:43:14 AM   rep_loss = 0.0
