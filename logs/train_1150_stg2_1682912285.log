04/30 11:38:06 PM The args: Namespace(aug_train=True, cache_dir='', data_dir='./_data/glue_data/RTE', data_url='', do_eval=False, do_lower_case=True, eval_batch_size=32, eval_step=2000, gradient_accumulation_steps=1, learning_rate=3e-05, max_seq_length=128, no_cuda=False, num_train_epochs=4.0, output_dir='./models_train/TinyBERT_6L_768D_1150_stg2_RTE', pred_distill=True, seed=42, student_model='./models_train/TinyBERT_6L_768D_1150_stg1_RTE', task_name='RTE', teacher_model='./_models/bert-base-uncased-rte', temperature=1.0, train_batch_size=34, warmup_proportion=0.1, weight_decay=0.0001)
04/30 11:38:06 PM device: cuda n_gpu: 1
04/30 11:38:06 PM ******** num_labels=2
04/30 11:38:52 PM Model config {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "rte",
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "pre_trained": "",
  "problem_type": "single_label_classification",
  "training": "",
  "transformers_version": "4.6.1",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

04/30 11:38:52 PM Loading model ./_models/bert-base-uncased-rte/pytorch_model.bin
04/30 11:38:53 PM loading model...
04/30 11:38:53 PM done!
04/30 11:38:53 PM Weights of TinyBertForSequenceClassification not initialized from pretrained model: ['fit_dense.weight', 'fit_dense.bias']
04/30 11:38:53 PM Weights from pretrained model not used in TinyBertForSequenceClassification: ['bert.embeddings.position_ids']
04/30 11:38:53 PM Model config {
  "attention_probs_dropout_prob": 0.1,
  "cell": {},
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 6,
  "pre_trained": "",
  "structure": [],
  "training": "",
  "type_vocab_size": 2,
  "vocab_size": 30522
}

04/30 11:38:54 PM Loading model ./models_train/TinyBERT_6L_768D_1150_stg1_RTE/pytorch_model.bin
04/30 11:38:54 PM loading model...
04/30 11:38:54 PM done!
04/30 11:38:54 PM ***** Running training *****
04/30 11:38:54 PM   Num examples = 144076
04/30 11:38:54 PM   Batch size = 34
04/30 11:38:54 PM   Num steps = 16948
04/30 11:38:54 PM n: bert.embeddings.word_embeddings.weight
04/30 11:38:54 PM n: bert.embeddings.position_embeddings.weight
04/30 11:38:54 PM n: bert.embeddings.token_type_embeddings.weight
04/30 11:38:54 PM n: bert.embeddings.LayerNorm.weight
04/30 11:38:54 PM n: bert.embeddings.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.self.query.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.self.query.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.self.key.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.self.key.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.self.value.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.self.value.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.attention.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.intermediate.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.intermediate.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.0.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.0.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.self.query.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.self.query.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.self.key.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.self.key.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.self.value.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.self.value.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.attention.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.intermediate.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.intermediate.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.1.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.1.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.self.query.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.self.query.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.self.key.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.self.key.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.self.value.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.self.value.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.attention.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.intermediate.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.intermediate.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.2.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.2.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.self.query.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.self.query.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.self.key.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.self.key.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.self.value.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.self.value.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.attention.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.intermediate.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.intermediate.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.3.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.3.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.self.query.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.self.query.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.self.key.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.self.key.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.self.value.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.self.value.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.attention.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.intermediate.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.intermediate.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.4.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.4.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.self.query.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.self.query.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.self.key.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.self.key.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.self.value.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.self.value.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.attention.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.intermediate.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.intermediate.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.output.dense.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.output.dense.bias
04/30 11:38:54 PM n: bert.encoder.layer.5.output.LayerNorm.weight
04/30 11:38:54 PM n: bert.encoder.layer.5.output.LayerNorm.bias
04/30 11:38:54 PM n: bert.pooler.dense.weight
04/30 11:38:54 PM n: bert.pooler.dense.bias
04/30 11:38:54 PM n: classifier.weight
04/30 11:38:54 PM n: classifier.bias
04/30 11:38:54 PM n: fit_dense.weight
04/30 11:38:54 PM n: fit_dense.bias
04/30 11:38:54 PM Total parameters: 67547138
04/30 11:44:03 PM ***** Running evaluation *****
04/30 11:44:03 PM   Epoch = 0 iter 1999 step
04/30 11:44:03 PM   Num examples = 277
04/30 11:44:03 PM   Batch size = 32
04/30 11:44:03 PM preds.shape (277, 2)
04/30 11:44:03 PM ***** Eval results *****
04/30 11:44:03 PM   acc = 0.5595667870036101
04/30 11:44:03 PM   att_loss = 0.0
04/30 11:44:03 PM   cls_loss = 0.25386068438845555
04/30 11:44:03 PM   eval_loss = 0.6801922453774346
04/30 11:44:03 PM   global_step = 1999
04/30 11:44:03 PM   loss = 0.25386068438845555
04/30 11:44:03 PM   rep_loss = 0.0
04/30 11:44:03 PM ***** Save model *****
04/30 11:49:12 PM ***** Running evaluation *****
04/30 11:49:12 PM   Epoch = 0 iter 3999 step
04/30 11:49:12 PM   Num examples = 277
04/30 11:49:12 PM   Batch size = 32
04/30 11:49:12 PM preds.shape (277, 2)
04/30 11:49:12 PM ***** Eval results *****
04/30 11:49:12 PM   acc = 0.6353790613718412
04/30 11:49:12 PM   att_loss = 0.0
04/30 11:49:12 PM   cls_loss = 0.2519972081757033
04/30 11:49:12 PM   eval_loss = 0.6581770247883267
04/30 11:49:12 PM   global_step = 3999
04/30 11:49:12 PM   loss = 0.2519972081757033
04/30 11:49:12 PM   rep_loss = 0.0
04/30 11:49:12 PM ***** Save model *****
04/30 11:54:20 PM ***** Running evaluation *****
04/30 11:54:20 PM   Epoch = 1 iter 5999 step
04/30 11:54:20 PM   Num examples = 277
04/30 11:54:20 PM   Batch size = 32
04/30 11:54:21 PM preds.shape (277, 2)
04/30 11:54:21 PM ***** Eval results *****
04/30 11:54:21 PM   acc = 0.6137184115523465
04/30 11:54:21 PM   att_loss = 0.0
04/30 11:54:21 PM   cls_loss = 0.24974146537761818
04/30 11:54:21 PM   eval_loss = 0.6614138417773776
04/30 11:54:21 PM   global_step = 5999
04/30 11:54:21 PM   loss = 0.24974146537761818
04/30 11:54:21 PM   rep_loss = 0.0
04/30 11:59:29 PM ***** Running evaluation *****
04/30 11:59:29 PM   Epoch = 1 iter 7999 step
04/30 11:59:29 PM   Num examples = 277
04/30 11:59:29 PM   Batch size = 32
04/30 11:59:29 PM preds.shape (277, 2)
04/30 11:59:29 PM ***** Eval results *****
04/30 11:59:29 PM   acc = 0.6498194945848376
04/30 11:59:29 PM   att_loss = 0.0
04/30 11:59:29 PM   cls_loss = 0.24941202598895754
04/30 11:59:29 PM   eval_loss = 0.6373404131995307
04/30 11:59:29 PM   global_step = 7999
04/30 11:59:29 PM   loss = 0.24941202598895754
04/30 11:59:29 PM   rep_loss = 0.0
04/30 11:59:29 PM ***** Save model *****
05/01 12:04:38 AM ***** Running evaluation *****
05/01 12:04:38 AM   Epoch = 2 iter 9999 step
05/01 12:04:38 AM   Num examples = 277
05/01 12:04:38 AM   Batch size = 32
05/01 12:04:38 AM preds.shape (277, 2)
05/01 12:04:38 AM ***** Eval results *****
05/01 12:04:38 AM   acc = 0.6534296028880866
05/01 12:04:38 AM   att_loss = 0.0
05/01 12:04:38 AM   cls_loss = 0.24874218894809974
05/01 12:04:38 AM   eval_loss = 0.6384794645839267
05/01 12:04:38 AM   global_step = 9999
05/01 12:04:38 AM   loss = 0.24874218894809974
05/01 12:04:38 AM   rep_loss = 0.0
05/01 12:04:38 AM ***** Save model *****
05/01 12:09:47 AM ***** Running evaluation *****
05/01 12:09:47 AM   Epoch = 2 iter 11999 step
05/01 12:09:47 AM   Num examples = 277
05/01 12:09:47 AM   Batch size = 32
05/01 12:09:47 AM preds.shape (277, 2)
05/01 12:09:47 AM ***** Eval results *****
05/01 12:09:47 AM   acc = 0.6606498194945848
05/01 12:09:47 AM   att_loss = 0.0
05/01 12:09:47 AM   cls_loss = 0.24886197941523072
05/01 12:09:47 AM   eval_loss = 0.640153341823154
05/01 12:09:47 AM   global_step = 11999
05/01 12:09:47 AM   loss = 0.24886197941523072
05/01 12:09:47 AM   rep_loss = 0.0
05/01 12:09:47 AM ***** Save model *****
05/01 12:14:57 AM ***** Running evaluation *****
05/01 12:14:57 AM   Epoch = 3 iter 13999 step
05/01 12:14:57 AM   Num examples = 277
05/01 12:14:57 AM   Batch size = 32
05/01 12:14:57 AM preds.shape (277, 2)
05/01 12:14:57 AM ***** Eval results *****
05/01 12:14:57 AM   acc = 0.6570397111913358
05/01 12:14:57 AM   att_loss = 0.0
05/01 12:14:57 AM   cls_loss = 0.2484103010400482
05/01 12:14:57 AM   eval_loss = 0.6470695270432366
05/01 12:14:57 AM   global_step = 13999
05/01 12:14:57 AM   loss = 0.2484103010400482
05/01 12:14:57 AM   rep_loss = 0.0
05/01 12:20:05 AM ***** Running evaluation *****
05/01 12:20:05 AM   Epoch = 3 iter 15999 step
05/01 12:20:05 AM   Num examples = 277
05/01 12:20:05 AM   Batch size = 32
05/01 12:20:06 AM preds.shape (277, 2)
05/01 12:20:06 AM ***** Eval results *****
05/01 12:20:06 AM   acc = 0.6570397111913358
05/01 12:20:06 AM   att_loss = 0.0
05/01 12:20:06 AM   cls_loss = 0.24825747215490418
05/01 12:20:06 AM   eval_loss = 0.6500902242130704
05/01 12:20:06 AM   global_step = 15999
05/01 12:20:06 AM   loss = 0.24825747215490418
05/01 12:20:06 AM   rep_loss = 0.0
