05/01 01:00:21 AM The args: Namespace(aug_train=True, cache_dir='', data_dir='./_data/glue_data/RTE', data_url='', do_eval=False, do_lower_case=True, eval_batch_size=32, eval_step=2000, gradient_accumulation_steps=1, learning_rate=3e-05, max_seq_length=128, no_cuda=False, num_train_epochs=4.0, output_dir='./models_train/TinyBERT_6L_768D_1151_stg2_RTE', pred_distill=True, seed=42, student_model='./models_train/TinyBERT_6L_768D_1151_stg1_RTE', task_name='RTE', teacher_model='./_models/bert-base-uncased-rte', temperature=1.0, train_batch_size=36, warmup_proportion=0.1, weight_decay=0.0001)
05/01 01:00:21 AM device: cuda n_gpu: 1
05/01 01:00:21 AM ******** num_labels=2
05/01 01:01:07 AM Model config {
  "_name_or_path": "bert-base-uncased",
  "architectures": [
    "BertForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "finetuning_task": "rte",
  "gradient_checkpointing": false,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 0,
  "position_embedding_type": "absolute",
  "pre_trained": "",
  "problem_type": "single_label_classification",
  "training": "",
  "transformers_version": "4.6.1",
  "type_vocab_size": 2,
  "use_cache": true,
  "vocab_size": 30522
}

05/01 01:01:08 AM Loading model ./_models/bert-base-uncased-rte/pytorch_model.bin
05/01 01:01:08 AM loading model...
05/01 01:01:08 AM done!
05/01 01:01:08 AM Weights of TinyBertForSequenceClassification not initialized from pretrained model: ['fit_dense.weight', 'fit_dense.bias']
05/01 01:01:08 AM Weights from pretrained model not used in TinyBertForSequenceClassification: ['bert.embeddings.position_ids']
05/01 01:01:09 AM Model config {
  "attention_probs_dropout_prob": 0.1,
  "cell": {},
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 6,
  "pre_trained": "",
  "structure": [],
  "training": "",
  "type_vocab_size": 2,
  "vocab_size": 30522
}

05/01 01:01:09 AM Loading model ./models_train/TinyBERT_6L_768D_1151_stg1_RTE/pytorch_model.bin
05/01 01:01:09 AM loading model...
05/01 01:01:09 AM done!
05/01 01:01:09 AM ***** Running training *****
05/01 01:01:09 AM   Num examples = 144076
05/01 01:01:09 AM   Batch size = 36
05/01 01:01:09 AM   Num steps = 16008
05/01 01:01:09 AM n: bert.embeddings.word_embeddings.weight
05/01 01:01:09 AM n: bert.embeddings.position_embeddings.weight
05/01 01:01:09 AM n: bert.embeddings.token_type_embeddings.weight
05/01 01:01:09 AM n: bert.embeddings.LayerNorm.weight
05/01 01:01:09 AM n: bert.embeddings.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.self.query.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.self.query.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.self.key.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.self.key.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.self.value.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.self.value.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.attention.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.intermediate.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.intermediate.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.0.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.0.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.self.query.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.self.query.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.self.key.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.self.key.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.self.value.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.self.value.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.attention.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.intermediate.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.intermediate.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.1.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.1.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.self.query.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.self.query.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.self.key.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.self.key.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.self.value.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.self.value.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.attention.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.intermediate.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.intermediate.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.2.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.2.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.self.query.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.self.query.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.self.key.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.self.key.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.self.value.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.self.value.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.attention.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.intermediate.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.intermediate.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.3.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.3.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.self.query.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.self.query.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.self.key.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.self.key.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.self.value.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.self.value.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.attention.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.intermediate.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.intermediate.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.4.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.4.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.self.query.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.self.query.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.self.key.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.self.key.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.self.value.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.self.value.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.attention.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.intermediate.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.intermediate.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.output.dense.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.output.dense.bias
05/01 01:01:09 AM n: bert.encoder.layer.5.output.LayerNorm.weight
05/01 01:01:09 AM n: bert.encoder.layer.5.output.LayerNorm.bias
05/01 01:01:09 AM n: bert.pooler.dense.weight
05/01 01:01:09 AM n: bert.pooler.dense.bias
05/01 01:01:09 AM n: classifier.weight
05/01 01:01:09 AM n: classifier.bias
05/01 01:01:09 AM n: fit_dense.weight
05/01 01:01:09 AM n: fit_dense.bias
05/01 01:01:09 AM Total parameters: 67547138
05/01 01:06:34 AM ***** Running evaluation *****
05/01 01:06:34 AM   Epoch = 0 iter 1999 step
05/01 01:06:34 AM   Num examples = 277
05/01 01:06:34 AM   Batch size = 32
05/01 01:06:35 AM preds.shape (277, 2)
05/01 01:06:35 AM ***** Eval results *****
05/01 01:06:35 AM   acc = 0.6498194945848376
05/01 01:06:35 AM   att_loss = 0.0
05/01 01:06:35 AM   cls_loss = 0.2536898143459046
05/01 01:06:35 AM   eval_loss = 0.6288782689306471
05/01 01:06:35 AM   global_step = 1999
05/01 01:06:35 AM   loss = 0.2536898143459046
05/01 01:06:35 AM   rep_loss = 0.0
05/01 01:06:35 AM ***** Save model *****
05/01 01:12:00 AM ***** Running evaluation *****
05/01 01:12:00 AM   Epoch = 0 iter 3999 step
05/01 01:12:00 AM   Num examples = 277
05/01 01:12:00 AM   Batch size = 32
05/01 01:12:00 AM preds.shape (277, 2)
05/01 01:12:00 AM ***** Eval results *****
05/01 01:12:00 AM   acc = 0.6353790613718412
05/01 01:12:00 AM   att_loss = 0.0
05/01 01:12:00 AM   cls_loss = 0.25175974467197754
05/01 01:12:00 AM   eval_loss = 0.6626032325956557
05/01 01:12:00 AM   global_step = 3999
05/01 01:12:00 AM   loss = 0.25175974467197754
05/01 01:12:00 AM   rep_loss = 0.0
05/01 01:17:25 AM ***** Running evaluation *****
05/01 01:17:25 AM   Epoch = 1 iter 5999 step
05/01 01:17:25 AM   Num examples = 277
05/01 01:17:25 AM   Batch size = 32
05/01 01:17:25 AM preds.shape (277, 2)
05/01 01:17:25 AM ***** Eval results *****
05/01 01:17:25 AM   acc = 0.6425992779783394
05/01 01:17:25 AM   att_loss = 0.0
05/01 01:17:25 AM   cls_loss = 0.24971803365406778
05/01 01:17:25 AM   eval_loss = 0.6501716242896186
05/01 01:17:25 AM   global_step = 5999
05/01 01:17:25 AM   loss = 0.24971803365406778
05/01 01:17:25 AM   rep_loss = 0.0
05/01 01:22:50 AM ***** Running evaluation *****
05/01 01:22:50 AM   Epoch = 1 iter 7999 step
05/01 01:22:50 AM   Num examples = 277
05/01 01:22:50 AM   Batch size = 32
05/01 01:22:50 AM preds.shape (277, 2)
05/01 01:22:50 AM ***** Eval results *****
05/01 01:22:50 AM   acc = 0.6353790613718412
05/01 01:22:50 AM   att_loss = 0.0
05/01 01:22:50 AM   cls_loss = 0.249308178901732
05/01 01:22:50 AM   eval_loss = 0.6520397663116455
05/01 01:22:50 AM   global_step = 7999
05/01 01:22:50 AM   loss = 0.249308178901732
05/01 01:22:50 AM   rep_loss = 0.0
05/01 01:28:15 AM ***** Running evaluation *****
05/01 01:28:15 AM   Epoch = 2 iter 9999 step
05/01 01:28:15 AM   Num examples = 277
05/01 01:28:15 AM   Batch size = 32
05/01 01:28:16 AM preds.shape (277, 2)
05/01 01:28:16 AM ***** Eval results *****
05/01 01:28:16 AM   acc = 0.6462093862815884
05/01 01:28:16 AM   att_loss = 0.0
05/01 01:28:16 AM   cls_loss = 0.24856500465021397
05/01 01:28:16 AM   eval_loss = 0.6446571681234572
05/01 01:28:16 AM   global_step = 9999
05/01 01:28:16 AM   loss = 0.24856500465021397
05/01 01:28:16 AM   rep_loss = 0.0
05/01 01:33:41 AM ***** Running evaluation *****
05/01 01:33:41 AM   Epoch = 2 iter 11999 step
05/01 01:33:41 AM   Num examples = 277
05/01 01:33:41 AM   Batch size = 32
05/01 01:33:41 AM preds.shape (277, 2)
05/01 01:33:41 AM ***** Eval results *****
05/01 01:33:41 AM   acc = 0.6642599277978339
05/01 01:33:41 AM   att_loss = 0.0
05/01 01:33:41 AM   cls_loss = 0.24882132425922923
05/01 01:33:41 AM   eval_loss = 0.6427541441387601
05/01 01:33:41 AM   global_step = 11999
05/01 01:33:41 AM   loss = 0.24882132425922923
05/01 01:33:41 AM   rep_loss = 0.0
05/01 01:33:41 AM ***** Save model *****
05/01 01:39:06 AM ***** Running evaluation *****
05/01 01:39:06 AM   Epoch = 3 iter 13999 step
05/01 01:39:06 AM   Num examples = 277
05/01 01:39:06 AM   Batch size = 32
05/01 01:39:06 AM preds.shape (277, 2)
05/01 01:39:06 AM ***** Eval results *****
05/01 01:39:06 AM   acc = 0.6642599277978339
05/01 01:39:06 AM   att_loss = 0.0
05/01 01:39:06 AM   cls_loss = 0.2483856306265062
05/01 01:39:06 AM   eval_loss = 0.6306831902927823
05/01 01:39:06 AM   global_step = 13999
05/01 01:39:06 AM   loss = 0.2483856306265062
05/01 01:39:06 AM   rep_loss = 0.0
05/01 01:44:31 AM ***** Running evaluation *****
05/01 01:44:31 AM   Epoch = 3 iter 15999 step
05/01 01:44:31 AM   Num examples = 277
05/01 01:44:31 AM   Batch size = 32
05/01 01:44:32 AM preds.shape (277, 2)
05/01 01:44:32 AM ***** Eval results *****
05/01 01:44:32 AM   acc = 0.6462093862815884
05/01 01:44:32 AM   att_loss = 0.0
05/01 01:44:32 AM   cls_loss = 0.24839709264023574
05/01 01:44:32 AM   eval_loss = 0.6357044246461656
05/01 01:44:32 AM   global_step = 15999
05/01 01:44:32 AM   loss = 0.24839709264023574
05/01 01:44:32 AM   rep_loss = 0.0
